
class Semaphore:
    def __init__(self, permits):
        self.permits = permits
        self.locks = []
        for i in range(permits):
            self.locks.append(getlock())
        self.block = getlock()
        
    def acquire(self):
        self.block.acquire(0)
        for lock in self.locks:
            if lock.acquire(0):
                return True
        self.block.acquire()
        return self.acquire()
    
    def release(self):
        for lock in self.locks:
            try:
                lock.release()
                break
            except:
                pass
        try:
            self.block.release()
        except:
            pass

def releaseSem(semaphore):
    semaphore.release()
    semaphore.release()

if callfunc == 'initialize':
    semaphore = Semaphore(2)
    semaphore.acquire()
    semaphore.acquire()
    print 'acquire 2'
    settimer(0, releaseSem, (semaphore,))
    semaphore.acquire()   
    semaphore.acquire()
    print 'ressume'         
/**
 * This file is part of the hyk-proxy project.
 * Copyright (c) 2010 Yin QiWen <yinqiwen@gmail.com>
 *
 * Description: ConfigService.java 
 *
 * @author yinqiwen [ 2010-5-14 | 08:42:16 PM ]
 *
 */
package com.hyk.proxy.client.config;

import java.io.FileOutputStream;
import java.net.URL;
import java.net.URLDecoder;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;

import com.hyk.proxy.client.config.Config.ConnectionMode;


/**
 *
 */
public class ConfigService
{
	public static final String	CONFIG_FILE		= "hyk-proxy-client.conf.xml";
	private static Config		defaultConfig	= null;

	public static Config getDefaultConfig() throws Exception
	{
		try
		{
			if(null == defaultConfig)
			{
				JAXBContext context = JAXBContext.newInstance(Config.class);
				Unmarshaller unmarshaller = context.createUnmarshaller();
				defaultConfig = (Config)unmarshaller.unmarshal(ConfigService.class.getResource("/" + CONFIG_FILE));
				defaultConfig.init();
			}
			return defaultConfig;
		}
		catch(Exception e)
		{
			throw e;
		}
	}
	
	public static void saveConfig(Config config) throws Exception
	{
		try
		{
			config.init();
			JAXBContext context = JAXBContext.newInstance(Config.class);
			Marshaller marshaller = context.createMarshaller();
			marshaller.setProperty("jaxb.formatted.output", Boolean.TRUE);
			URL url = Config.class.getResource("/" + CONFIG_FILE);
			String conf = URLDecoder.decode(url.getFile(), "UTF-8");
			FileOutputStream fos = new FileOutputStream(conf);
			//fos.write("<!-- This is generated by hyk-proxy-client GUI, it's not the orignal conf file -->\r\n".getBytes());
			marshaller.marshal(config, fos);
			fos.close();
		}
		catch(Exception e)
		{
			throw e;
		}
	}
	
	public static void main(String [] args) throws Exception
	{
		Config cfg = getDefaultConfig();
		cfg.init();
		System.out.println(cfg.getLocalProxyServerAddress().host);
		System.out.println(cfg.getHykProxyServerAuths().get(0).appid);
		System.out.println(cfg.getCompressor());
		System.out.println(cfg.getXmppAccounts().get(0).jid);
		System.out.println(cfg.getClient2ServerConnectionMode());
		//System.out.println(cfg.getHykProxyClientLocalProxy().host);
		cfg.setClient2ServerConnectionMode(ConnectionMode.XMPP2GAE);
		saveConfig(cfg);
		
	}
}
